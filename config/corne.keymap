/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/*  key matrix for corne 42 key layout
┌───┬───┬───┬───┬───┬───┐┌───┬───┬───┬───┬───┬───┐
│ 0 │ 1 │ 2 │ 3 │ 4 │ 5 ││ 6 │ 7 │ 8 │ 9 │10 │11 │
├───┼───┼───┼───┼───┼───┤├───┼───┼───┼───┼───┼───┤
│12 │13 │14 │15 │16 │17 ││18 │19 │20 │21 │22 │23 │
├───┼───┼───┼───┼───┼───┤├───┼───┼───┼───┼───┼───┤
│24 │25 │26 │27 │28 │29 ││30 │31 │32 │33 │34 │35 │
├───┼───┼───┼───┼───┼───┤├───┼───┼───┼───┼───┼───┤
│   │   │   │36 │37 │38 ││39 │40 │41 │   │   │   │
└───┴───┴───┴───┴───┴───┘└───┴───┴───┴───┴───┴───┘
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define MAC 0
#define WIN 1
#define LWR 2
#define UPR 3
#define FUN 4

/ {
    behaviors {
        hrm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 17 18 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
            flavor = "tap-preferred";
        };

        hrs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 17 18 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
            flavor = "balanced";
        };
    };

    combos {
        compatible = "zmk,combos";

        // U + I + O -> CAPSLOCK

        combo_caps {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp CAPSLOCK>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        // LOWER + UPPER = FUNCTION LAYER

        tri_layer {
            if-layers = <LWR UPR>;
            then-layer = <FUN>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB        &kp Q         &kp W        &kp E        &kp R         &kp T          &kp Y         &kp U          &kp I        &kp O        &kp P            &kp BSPC
&mt LCTRL ESC  &hrm LCTRL A  &hrm LALT S  &hrm LGUI D  &hrs LSHFT F  &kp G          &kp H         &hrs RSHFT J   &hrm RGUI K  &hrm RALT L  &hrm RCTRL SEMI  &kp SQT
&kp LSHFT      &kp Z         &kp X        &kp C        &kp V         &kp B          &kp N         &kp M          &kp COMMA    &kp DOT      &kp FSLH         &kp ESC
                                          &mo 4        &kp TAB       &lt 3 SPACE    &lt 2 ESCAPE  &kp BACKSPACE  &mo 4
            >;
        };

        windows_layer {
            bindings = <
&kp TAB        &kp Q        &kp W        &kp E         &kp R         &kp T          &kp Y         &kp U          &kp I         &kp O        &kp P           &kp BSPC
&mt LCTRL ESC  &hrm LGUI A  &hrm LALT S  &hrm LCTRL D  &hrs LSHFT F  &kp G          &kp H         &hrs RSHFT J   &hrm RCTRL K  &hrm RALT L  &hrm RGUI SEMI  &kp SQT
&kp LSHFT      &kp Z        &kp X        &kp C         &kp V         &kp B          &kp N         &kp M          &kp COMMA     &kp DOT      &kp FSLH        &kp ESC
                                         &mo 4         &kp TAB       &lt 3 SPACE    &lt 2 ESCAPE  &kp BACKSPACE  &mo 4
            >;
        };

        lower_layer {
            bindings = <
&kp TAB           &kp ASTERISK  &kp N7  &kp N8  &kp N9  &kp PLUS     &trans    &trans     &trans     &trans     &trans  &kp BSPC
&mt LCTRL ESCAPE  &kp SLASH     &kp N4  &kp N5  &kp N6  &kp MINUS    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans  &trans
&kp LSHFT         &trans        &kp N1  &kp N2  &kp N3  &kp EQUAL    &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans  &kp RALT
                                        &trans  &kp N0  &kp SPACE    &trans    &trans     &kp RALT
            >;
        };

        upper_layer {
            bindings = <
&kp TAB    &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK          &kp LPAR       &kp RPAR   &kp BSPC
&kp LCTRL  &trans    &kp LBKT  &kp LBRC  &kp LPAR  &trans       &kp MINUS  &kp EQUAL  &kp SQT            &kp BACKSLASH  &kp TILDE  &kp TILDE
&kp LSHFT  &trans    &kp RBKT  &kp RBRC  &kp RPAR  &trans       &kp UNDER  &kp PLUS   &kp DOUBLE_QUOTES  &kp PIPE       &kp GRAVE  &kp GRAVE
                               &kp LGUI  &trans    &kp SPACE    &kp RET    &kp DEL    &kp RALT
            >;
        };

        function_layer {
            bindings = <
&tog WIN  &kp F1  &kp F2   &kp F3   &kp F4   &bt BT_SEL 0    &bt BT_SEL 3  &kp C_MUTE    &trans        &kp C_PP    &trans  &bootloader
&trans    &kp F5  &kp F6   &kp F7   &kp F8   &bt BT_SEL 1    &bt BT_SEL 4  &kp C_VOL_UP  &kp C_BRI_UP  &kp C_NEXT  &trans  &trans
&trans    &kp F9  &kp F10  &kp F11  &kp F12  &bt BT_SEL 2    &bt BT_CLR    &kp C_VOL_DN  &kp C_BRI_DN  &kp C_PREV  &trans  &trans
                           &trans   &trans   &trans          &trans        &trans        &trans
            >;
        };
    };
};
